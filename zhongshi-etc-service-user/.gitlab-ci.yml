variables:
 project: "user"
 version: "v1.0.0-release"
 port: "2000"
 imageVersion: "'3.0'"
#package: "zhongshi-etc-basics/zhongshi-etc-basics"
#module: "basics"
#package: "zhongshi-etc-service/zhongshi-etc-service-impl/zhongshi-etc-service"
 module: "service"   

stages:
  - 构建
  - 推送
  - 发布
  - 清理  
   
构建: 
  stage: 构建
  script:
    - $MAVEN_HOME/bin/mvn clean package
    - cp target/zhongshi-etc-$module-$project.jar .
    - echo '
     
       FROM openjdk:8-jre

       MAINTAINER zhongshi <zhongshi@zhongshi.info>  

       ENV DOCKERIZE_VERSION v0.6.0  

       RUN mkdir /'$project'  

       WORKDIR /'$project'    

       COPY zhongshi-etc-'$module'-'$project'.jar /$project/zhongshi-etc-'$module'-'$project'.jar    

       ENTRYPOINT ["java", "-server", "-Xms256m", "-Xmx1g", "-XX:MetaspaceSize=128m", "-XX:MaxMetaspaceSize=320m" ,"-Djava.security.egd=file:/dev/./urandom", "-jar", "/'$project'/zhongshi-etc-'$module'-'$project'.jar"]
   
       EXPOSE '$port' 
      
       ' >Dockerfile

    - docker login $HarborIp -u$HarborUsername -p$HarborPassword
    - docker build -t $HarborIp/$project/zhongshi-etc-$module-$project:$version .

推送:
  stage: 推送
  script:
    - docker push $HarborIp/$project/zhongshi-etc-$module-$project:$version

发布:
  stage: 发布
  script:
    - docker pull $HarborIp/$project/zhongshi-etc-$module-$project:$version
#  only:
#    - branches
#  except:
#    - master

清理:
  stage: 清理
  script:
#    - docker rm $(docker ps -aq)
    - docker rmi $(docker images | grep "zhongshi-etc-$module-$project" | awk '{print $3}')
    
    
测试:
  stage: 发布
  script:
    - cd zhongshi-etc-parent
    - echo -e '

        version'':' $imageVersion
       '\nservices'':'
       '\n  zhongshi-etc-'$module'-'$project':'
       '\n    image'':'' 8.129.174.183/'$project'/zhongshi-etc-'$module'-'$project':'$version
       '\n    restart'':' 'on-failure '
       '\n    container_name'':' 'zhongshi-etc-'$module'-'$project
       '\n    environment'':'
       '\n      MODULE'':'' '$project':'$version
       '\n    ports'':'
       '\n      - '$port':'$port
       '\n    networks'':'
       '\n      - zhongshi-backend'
       '\nnetworks'':'
       '\n  zhongshi-backend'':'
       '\n    external'':'' true

      
      ' > docker-compose.yml

    - docker-compose down
    - docker-compose up -d
  environment:
    name: staging
    url: https://staging.example.com
  when: manual
  only:
  - master
  
生产:
  stage: 发布
  script:
    - echo "production"
  environment:
    name: production
    url: https://example.com
  when: manual
  only:
  - master
